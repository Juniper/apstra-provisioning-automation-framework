# ********************************************************
#
# Project: Apstra Provisioning Automation Framework
#
# Copyright (c) Juniper Networks, Inc., 2025. All rights reserved.
#
# Notice and Disclaimer: This code is licensed to you under the Apache 2.0 License (the "License"). You may not use this code except in compliance with the License. This code is not an official Juniper product. You can obtain a copy of the License at https://www.apache.org/licenses/LICENSE-2.0.html
#
# SPDX-License-Identifier: Apache-2.0
#
# Third-Party Code: This code may depend on other components under separate copyright notice and license terms. Your use of the source code for those components is subject to the terms and conditions of the respective license as noted in the Third-Party source code file.
#
# ********************************************************
#
# DISCLAIMER: The data contained in this YAML file is entirely fabricated and
# intended solely for demo purposes. Any resemblance to real data is purely
# coincidental. All values are simulated and are not
# linked to any actual systems or environments.
#
# ********************************************************

# Please copy and paste this file, then rename it to "credentials.yml" and fill in your specific data.

# ---------------------------------------------------------------------------- #
#                                 Apstra login                                 #
# ---------------------------------------------------------------------------- #

# | Note that when the Username or Password fields contain special characters and are
# │ embedded in the URL, Terraform required them to be URL-encoded by substituting '%<hex-value>' in
# │ place of each special character. The following table demonstrates some common
# │ substitutions:
# 
# │       " => %22        # => %23        % => %25        / => %2F
# │       < => %3C        > => %3E        ? => %3F        [ => %5B
# │       \ => %5C        ] => %5D        ^ => %5E

# │ To generate 'enconded_password' from 'password' with python3:
#  import urllib.parse
#  urllib.parse.quote(password, safe='')


aos:
  
  # APSTRA Server #1
  - target: < ... >
    username: < ... >
    password: < ... >
    encoded_password: < ... >
    ip: < ... >
  
  # APSTRA Server #2
  - target: < ... >
    username: < ... >
    password: < ... >
    encoded_password: < ... >
    ip: < ... >
  
  # APSTRA Server #3
  - target: < ... >
    username: < ... >
    password: < ... >
    encoded_password: < ... >
    ip: < ... >

    